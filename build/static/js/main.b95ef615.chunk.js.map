{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","util.js","types.js","components/Services.js","actions/serviceActions.js","actions/cartActions.js","components/Filter.js","components/Cart.js","actions/orderActions.js","store.js","reducers/serviceReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","components/Mainpage.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","process","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","pushState","Container","className","style","minHeight","maxWidth","Card","Body","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","onClick","Login","push","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","formatCurrency","num","Number","toFixed","toLocaleString","FETCH_SERVICES","FILTER_SERVICES_BY_TYPE","SORT_SERVICES_BY_PRICE","ADD_TO_CART","REMOVE_FROM_CART","CREATE_ORDER","CLEAR_ORDER","Services","openModal","service","setState","closeModal","state","product","this","fetchServices","bottom","cascade","services","map","href","_id","src","image","alt","title","price","addToCart","isOpen","onRequestClose","description","productType","x","connect","filteredItems","dispatch","fetch","res","json","data","console","log","payload","getState","cartItems","cart","slice","alreadyExists","forEach","count","localStorage","setItem","JSON","stringify","Filter","filteredServices","length","onChange","sortServices","target","filterServices","sort","items","filter","indexOf","sortedServices","b","Cart","handleInput","name","createOrder","order","address","total","reduce","c","clearOrder","showCheckout","left","item","removeFromCart","right","method","headers","body","clear","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","action","parse","getItem","applyMiddleware","thunk","Mainpage","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b95ef615.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\n\nconst app = firebase.initializeApp({\n    \n    apiKey: \"AIzaSyBxxq5gnKLl6FRf9KPEl1yiWA1E8aBMwnc\",\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\n});\n\nexport const auth = app.auth();\n\nexport default app;","import React, { useContext, useState, useEffect } from 'react'\nimport { auth } from '../firebase'\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState()\n    const [loading, setLoading] = useState(true)\n\n    function signup(email, password) {\n        return auth.createUserWithEmailAndPassword(email, password)\n    }\n\n    function login(email, password) {\n        return auth.signInWithEmailAndPassword(email, password)\n    }\n\n    function logout() {\n        return auth.signOut()\n    }\n\n    function resetPassword(email) {\n        return auth.sendPasswordResetEmail(email)\n    }\n\n    function updateEmail(email) {\n        return currentUser.updateEmail(email)\n    }\n\n    function updatePassword(password) {\n        return currentUser.updatePassword(password)\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user)\n            setLoading(false)\n        })\n        \n        return unsubscribe\n    }, [])\n\n    \n    \n    const value = {\n        currentUser,\n        signup,\n        login,\n        logout,\n        resetPassword,\n        updateEmail,\n        updatePassword\n    }\n    \n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}\n\n\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\n\nexport default function Signup() {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const passwordConfirmRef = useRef()\n    const { signup } = useAuth()\n    const [error, setError] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        if (passwordRef.current.value !==\n            passwordConfirmRef.current.value) {\n                return setError(\"Passwords do not match\")\n            }\n\n        try {\n            setError(\"\")\n            setLoading(true)\n            await signup(emailRef.current.value, passwordRef.current.value)\n            history.pushState(\"/\")\n        } catch {\n            setError(\"Failed to create an account\")\n        }\n\n        setLoading(false)\n    }\n\n    return (\n        <>\n            <Container\n                className=\"d-flex align-items-center justify-content-center\"\n                style={{ minHeight: \"100vh\"}}\n            >\n                <div className=\"w-100\" style={{ maxWidth:\"400px\"}}>\n                    <Card>\n                        <Card.Body>\n                            <h2 className=\"text-center mb-4\">Sign Up</h2>\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\n                            <Form onSubmit={handleSubmit}>\n                                <Form.Group id=\"email\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"email\" ref={emailRef} required />\n                                </Form.Group>\n                                <Form.Group id=\"password\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control type=\"password\" ref={passwordRef} required />\n                                </Form.Group>\n                                <Form.Group id=\"password-confirm\">\n                                    <Form.Label>Password Confrimation</Form.Label>\n                                    <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n                                </Form.Group>\n                                <Button disabled={loading} type=\"submit\" className=\"w-100\">\n                                    Sign Up\n                                </Button>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                \n                    <div className=\"w-100 text-center- mt-2\">\n                        Already have an Account? <Link to=\"/login\">Log In</Link>\n                    </div>\n                </div>\n            </Container>\n        </>\n    )\n}","import React, { useState } from 'react'\nimport { Alert, Button, Card, Container } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\n\nexport default function Dashboard() {\n    const [error, setError] = useState(\"\")\n    const { currentUser, logout } = useAuth()\n    const history = useHistory()\n    \n    async function handleLogout() {\n        setError(\"\")\n\n        try {\n            await logout()\n            history.pushState(\"/login\")\n        } catch {\n            setError(\"Failed to Log Out\")\n        }\n    }\n\n    return (\n        <>\n            <Container\n                className=\"d-flex align-items-center justify-content-center\"\n                style={{ minHeight: \"100vh\"}}\n            >\n                <div className=\"w-100\" style={{ maxWidth:\"400px\"}}>\n                    <Card>\n                        <Card.Body>\n                            <h2 className=\"text-center mb-4\">Profile</h2>\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\n                            <strong>Email: </strong> {currentUser.email}\n                            <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\n                                Update Profile\n                            </Link>\n                            <Link to=\"/main-page\" className=\"btn btn-success w-100 mt-3\">\n                                On to the Main Page!\n                            </Link>\n                        </Card.Body>\n                    </Card>\n                    <div className=\"w-100 text-center mt-2\">\n                        <Button variant=\"link\" onClick={handleLogout}>\n                            Log Out\n                        </Button>\n                    </div>\n                </div>\n            </Container>\n        </>\n    )\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\n\n\nexport default function Login() {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const { login } = useAuth()\n    const [error, setError] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        try {\n            setError(\"\")\n            setLoading(true)\n            await login(emailRef.current.value, passwordRef.current.value)\n            history.push(\"/\")\n        } catch {\n            setError(\"Failed to sign in\")\n        }\n\n        setLoading(false)\n    }\n\n    return (\n        <>\n            <Container \n                className=\"d-flex align-items-center justify-content-center\"\n                style={{ minHeight: \"100vh\"}}\n            >\n                <div className=\"container w-100\" style={{ maxWidth:\"400px\"}} >\n                    <Card>\n                        <Card.Body>\n                            <h2 className=\"text-center mb-4\">Log In</h2>\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\n                            <Form onSubmit={handleSubmit}>\n                                <Form.Group id=\"email\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"email\" ref={emailRef} required />\n                                </Form.Group>\n                                <Form.Group id=\"password\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control type=\"password\" ref={passwordRef} required />\n                                </Form.Group>\n                                <Button disabled={loading} type=\"submit\" className=\"w-100\">\n                                    Login\n                                </Button>\n                            </Form>\n                            <div className=\"w-100 text-center- mt-3\">\n                                <Link to=\"/forgot-password\">Forgot Password?</Link>\n                            </div>\n                        </Card.Body>\n                    </Card>\n                    <div className=\"w-100 text-center- mt-2\">\n                        Don't have an account? <Link to=\"/signup\">Sign Up</Link>\n                    </div>\n                </div>\n            </Container>\n        </>\n    )\n}","import React from 'react'\nimport { Redirect, Route } from \"react-router-dom\"\nimport { useAuth } from \"../contexts/AuthContext\"\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n    const { currentUser } = useAuth()\n    \n    return (\n        <Route\n            {...rest}\n            render={props => {\n                return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\n            }}\n        >\n        </Route>\n    )\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link } from \"react-router-dom\"\n\nexport default function ForgotPassword() {\n    const emailRef = useRef()\n    const { resetPassword } = useAuth()\n    const [error, setError] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        try {\n            setError(\"\")\n            setLoading(true)\n            await resetPassword(emailRef.current.value)\n            setMessage(\"Check your inbox for further instructions\")\n        } catch {\n            setError(\"Failed to reset password\")\n        }\n\n        setLoading(false)\n    }\n\n    return (\n        <>\n            <Container\n                className=\"d-flex align-items-center justify-content-center\"\n                style={{ minHeight: \"100vh\"}}\n            >\n                <div className=\"w-100\" style={{ maxWidth:\"400px\"}}>\n                    <Card>\n                        <Card.Body>\n                            <h2 className=\"text-center mb-4\">Reset Password</h2>\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\n                            {message && <Alert variant=\"success\">{message}</Alert>}\n                            <Form onSubmit={handleSubmit}>\n                                <Form.Group id=\"email\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"email\" ref={emailRef} required />\n                                </Form.Group>\n                                <Button disabled={loading} type=\"submit\" className=\"w-100\">\n                                    Reset Password\n                                </Button>\n                            </Form>\n                            <div className=\"w-100 text-center- mt-3\">\n                                <Link to=\"/login\">Login</Link>\n                            </div>\n                        </Card.Body>\n                    </Card>\n                    <div className=\"w-100 text-center- mt-2\">\n                        Don't have an account? <Link to=\"/signup\">Sign Up</Link>\n                    </div>\n                </div>\n            </Container>\n        </>\n    )\n}","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\n\nexport default function UpdateProfile() {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const passwordConfirmRef = useRef()\n    const { currentUser, updateEmail, updatePassword } = useAuth()\n    const [error, setError] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    function handleSubmit(e) {\n        e.preventDefault()\n\n        if (passwordRef.current.value !==\n            passwordConfirmRef.current.value) {\n                return setError(\"Passwords do not match\")\n            }\n\n            const promises = []\n            setLoading(true)\n            setError(\"\")\n\n            if (emailRef.current.value !== currentUser.email) {\n                promises.push(updateEmail(emailRef.current.value))\n            }\n\n            if (passwordRef.current.value) {\n                promises.push(updatePassword(passwordRef.current.value))\n            }\n\n            Promise.all(promises).then(() => {\n                history.push(\"/\")\n            }).catch(() => {\n                setError(\"Failed to update account\")\n            }).finally(() => {\n                setLoading(false)\n            })\n    }\n\n    return (\n        <>\n            <Container\n            className=\"d-flex align-items-center justify-content-center\"\n            style={{ minHeight: \"100vh\"}}\n        >\n                <div className=\"w-100\" style={{ maxWidth:\"400px\"}}>\n                    <Card>\n                        <Card.Body>\n                            <h2 className=\"text-center mb-4\">Update Profile</h2>\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\n                            <Form onSubmit={handleSubmit}>\n                                <Form.Group id=\"email\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"email\" ref={emailRef} required defaultValue={currentUser.email} />\n                                </Form.Group>\n                                <Form.Group id=\"password\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\" />\n                                </Form.Group>\n                                <Form.Group id=\"password-confirm\">\n                                    <Form.Label>Password Confrimation</Form.Label>\n                                    <Form.Control type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\" />\n                                </Form.Group>\n                                <Button disabled={loading} type=\"submit\" className=\"w-100\">\n                                    Update\n                                </Button>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                    <div className=\"w-100 text-center- mt-2\">\n                        <Link to=\"/\">Cancel</Link>\n                    </div>\n                </div>\n            </Container>\n        </>\n    )\n}","// Adding Dollar Sign to Services List \n\nexport default function formatCurrency(num) {\n    return \"$\" + Number(num.toFixed(1)).toLocaleString() + \" \";\n}","export const FETCH_SERVICES = \"FETCH_SERVICES\";\nexport const FILTER_SERVICES_BY_TYPE = \"FILTER_SERVICES_BY_TYPE\";\nexport const SORT_SERVICES_BY_PRICE = \"SORT_SERVICES_BY_PRICE\";\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CREATE_ORDER = \"CREATE_ORDER\";\nexport const CLEAR_ORDER = \"CLEAR_ORDER\";\nexport const CLEAR_CART = \"CLEAR_CART\"; \n\n ","import React, { Component } from 'react';\nimport formatCurrency from '../util';\nimport Fade from 'react-reveal/Fade';\nimport Modal from 'react-modal';\nimport Zoom from 'react-reveal/Zoom';\nimport { fetchServices } from \"../actions/serviceActions\";\nimport { connect } from \"react-redux\";\nimport {addToCart} from \"../actions/cartActions\";\n\n class Services extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            product: null,\n        };\n    }\n\n    componentDidMount() {\n        this.props.fetchServices();\n    }\n\n\n    openModal = (service) => {\n        this.setState({service});\n    };\n    closeModal = () => {\n        this.setState({service:null});\n    };\n    render() {\n        const {service} = this.state;\n        return (\n            <div>\n                <Fade bottom cascade>\n                    {\n                        !this.props.services ? ( <div> loading... </div>\n                        ) : (\n                    \n                <ul className=\"services\">\n                   {this.props.services.map((service) => (\n                       <li key={service._id}>\n                           <div className=\"service\">\n                               <a href={\"#\" + service._id} \n                               onClick={() => this.openModal(service)}>\n                                   <img className =\"service-images\" src={service.image} alt={service.title}/>\n                                   <p>\n                                       {service.title}\n                                   </p>\n                               </a>\n\n                               <div className=\"service-price\">\n                                   <div>\n                                       {formatCurrency(service.price)}\n                                   </div>\n                                       <button onClick= {() => this.props.addToCart(service)}\n                                        className=\"button primary\">\n                                           Add To Cart </button>\n                               </div>\n\n                           </div>\n                       </li>\n                   ))} \n                 </ul>\n                        )}\n             </Fade>\n             {/* Modal */}\n             {service && (\n                     <Modal isOpen={true}\n                     onRequestClose={this.closeModal}>\n                         \n                         <Zoom>\n                             <button className=\"close-modal\"\n                             onClick={this.closeModal}>x</button>\n                             \n                             <div className=\"service-details\">\n                                <img src={service.image} alt={service.title}/>\n                                <div className=\"service-details-description\">\n                                    <p>\n                                       <strong>{service.title}</strong>\n                                    </p>\n                                    <p>\n                                        {service.description}\n                                    </p>\n                                    <p>\n                                       Product Types {\" \"}\n                                        {service.productType.map(x=> (\n                                            <span> {\" \"} <button className=\"button\"> {x} </button> </span>\n                                            ))} \n                                    </p>\n                                    <div className=\"service-price\">\n                                        <div>\n                                            {formatCurrency(service.price)}\n                                            <button className=\"button primary\" onClick={() => {\n                                                this.props.addToCart(service);\n                                                this.closeModal();\n                                            }}>Add to Cart</button>\n                                        </div>\n                                    </div>\n                                </div>\n                             </div>\n                        \n                         </Zoom>\n                     </Modal>\n                 )}\n         </div>\n        )\n    }\n}\n\nexport default connect(\n(state) => ({ services: state.services.filteredItems}), \n{\n fetchServices, \n addToCart,}\n)(Services);","import { FETCH_SERVICES, FILTER_SERVICES_BY_TYPE, SORT_SERVICES_BY_PRICE } from \"../types\";\n\nexport const fetchServices = () => async(dispatch) => {\n   const res = await fetch(\"/api/services\");\n   const data = await res.json();\n   console.log(data);\n   dispatch({\n       type: FETCH_SERVICES,\n       payload: data,\n   });\n};\n\nexport const filterServices = (services, productType) => (dispatch) => {\n    dispatch({\n        type: FILTER_SERVICES_BY_TYPE, \n        payload: {\n            productType: productType,\n            items: productType === \"\"\n            ? services\n            : services.filter(x => x.productType.indexOf(productType)>=0)\n        }\n    });\n};\n\nexport const sortServices = (filterServices, sort) => (dispatch) => {\n  const sortedServices = filterServices.slice();\n    if(sort === \"\") {\n        sortedServices.sort((a,b) => (a._id > b._id ? 1 : -1));\n    } else {\n        sortedServices.sort((a,b) => \n           sort === \"lowest\"\n           ? a.price > b.price? \n           1 : -1\n           :\n           a.price > b.price\n           ? -1 \n           : 1 \n        )\n    }\n    dispatch(\n        {type: SORT_SERVICES_BY_PRICE,\n        payload: {\n            sort: sort, \n            items: sortedServices\n        }  }\n    )\n}\n\n\n\n\n\n\n","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\";\n\nexport const addToCart = (service) => (dispatch, getState) => {\n    const cartItems = getState().cart.cartItems.slice();\n    let alreadyExists = false;\n    cartItems.forEach((x) => {\n      if (x._id === service._id) {\n        alreadyExists = true;\n        x.count++;\n      }\n    });\n    if (!alreadyExists) {\n      cartItems.push({ ...service, count: 1 });\n    }\n    dispatch({\n      type: ADD_TO_CART,\n      payload: { cartItems },\n    });\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  };\n  \n  export const removeFromCart = (service) => (dispatch, getState) => {\n    const cartItems = getState()\n      .cart.cartItems.slice()\n      .filter((x) => x._id !== service._id);\n    dispatch({ type: REMOVE_FROM_CART, payload: { cartItems } });\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  };\n\n  ","import { connect } from 'react-redux'\nimport React, { Component } from 'react'\nimport { filterServices, sortServices } from '../actions/serviceActions';\n\nclass Filter extends Component {\n    render() {\n        return !this.props.filteredServices? (\n            <div> Loading... </div>\n        ) : (\n            <div className=\"filter\"> \n                <div className=\"filter-result\"> {this.props.filteredServices.length} Services \n                </div>\n                <div className=\"filter-sort\"> \n                Sort {\" \"} \n                <select value={this.props.price} \n                onChange={(e) => \n                this.props.sortServices(\n                    this.props.filteredServices, \n                    e.target.value)}>\n\n                    <option value=\"lowest\"> Price (Lowest) </option>\n                    <option value=\"highest\"> Price (Highest)</option>\n\n               </select>\n                      \n                </div>\n\n                <div className=\"filter-producttype\"> Filter {\" \"}\n                 <select value={this.props.productType} onChange={(e) => this.props.filterServices(this.props.services, e.target.value)}> \n                     <option value=\"\"> All </option>\n                     <option value=\"Desktop\"> Desktop </option>\n                     <option value=\"Laptop\"> Laptop </option>\n                     <option value=\"Tablet\"> Tablet </option>\n                     <option value=\"Switch\"> Switch </option>\n                     <option value=\"Access Point\"> Access Point </option>\n                     <option value=\"NAS Storage Device\"> NAS Storage Device </option>\n                     <option value=\"Firewall\"> Firewall </option>\n                    </select>\n                    </div>\n            \n\n             </div> \n\n\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n    productType: state.services.productType,\n    sort: state.services.sort,\n    services: state.services.items,\n    filteredServices: state.services.filteredItems  \n}),\n{\n    filterServices,\n    sortServices,\n}\n) (Filter); ","import React, { Component } from 'react';\nimport formatCurrency from '../util';\nimport Fade from 'react-reveal/Fade';\nimport { connect } from \"react-redux\";\nimport Zoom from \"react-reveal/Zoom\";\nimport Modal from \"react-modal\";\nimport {removeFromCart} from \"../actions/cartActions\";\nimport { createOrder, clearOrder } from \"../actions/orderActions\";\n\n\nclass Cart extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name:\"\",\n            email:\"\",\n            address:\"\",\n            showCheckout: false,\n        };\n    }\n\n    // Handle Input Function \n    handleInput = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n    \n    createOrder = (e) => {\n        e.preventDefault();\n        const order = {  \n            name: this.state.name,\n            email: this.state.email,\n            address: this.state.address,\n            cartItems: this.props.cartItems,\n            total: this.props.cartItems.reduce((a,c) => a + c.price * c.count, 0),\n        };\n        this.props.createOrder(order);\n    };\n    closeModal = () =>{\n        this.props.clearOrder();\n    }\n    render() {\n        const { cartItems, order } = this.props;\n        return (\n        <div>\n            {cartItems.length === 0 ? ( \n            <div className= \"cart cart-header\"> Cart Is empty </div>\n          )  : (\n           <div className= \"cart cart-header\"> \n           You Have {cartItems.length} Items In The Cart {\" \"}\n            </div>\n          )}\n\n            {order && (\n            <Modal\n            isOpen={true}\n            onRequestClose={this.closeModal}\n            >\n                <Zoom>\n                    <button className=\"close-modal\" onClick={this.closeModal}>x</button>\n                    <div className=\"order-details\">\n                        <h3 className=\"success-message\"> Your order has been placed </h3>\n                        <h2>Order Number  {order._id } </h2>\n                        <ul>\n                            <li> \n                                <div> Name: </div>\n                                <div> {order.name} </div>\n                            </li>\n                            <li> \n                                <div> Email: </div>\n                                <div> {order.email} </div>\n                            </li>\n                            <li> \n                                <div> Address: </div>\n                                <div> {order.address} </div>\n                            </li>\n                            <li> \n                                <div> Cart Items: </div>\n                                <div> \n                                    {order.cartItems.map((x) =>  (\n                                    <div> \n                                        {x.count} {\" x \"} {x.title}\n                                     </div>                              \n                                 ))}\n                                 </div>\n                            </li>\n                            <li> \n                                <div> Total: </div>\n                                <div> {formatCurrency(order.total)} </div>\n                            </li>\n                        </ul>\n                    </div>\n                </Zoom>\n                </Modal>\n            )}\n            <div>\n              <div className=\"cart\">\n                  <Fade left cascade>\n                  <ul className=\"cart-items\">\n                    {cartItems.map((item) => (\n                        <li key={item._id}>\n                            <div>\n                                <img src={item.image} alt={item.title}/>\n                            </div>\n                            <div>\n                                <div> {item.title}</div>\n                                <div  className=\"right\">  \n                                {formatCurrency(item.price)} x {item.count} {\" \"}\n                                <button className=\"button\" onClick={() => this.props.removeFromCart(item)}> Remove </button>\n                                </div>\n                            </div>\n                        </li>\n                    ))}\n                  </ul>\n                  </Fade>\n              </div>\n                {cartItems.length!==0 && (\n                    <div>\n                     <div className=\"cart\">\n                     <div className=\"total\">\n                         <div>\n                             Total: {\" \"}\n                             {formatCurrency(cartItems.reduce((a,c) => a + c.price*c.count, 0 ))}\n                         </div>\n                         <button onClick={() => \n                            {this.setState({showCheckout: true}); \n                         }}\n                         className=\"button primary\">\n                             Proceed\n                         </button>\n                     </div>\n                </div>\n                {this.state.showCheckout && (\n                  <Fade right cascade>\n                  <div className=\"cart\">\n                    <form onSubmit={this.createOrder}>\n                        <ul className=\"form-container\">\n                            <li>\n                                <label>Email</label>\n                                <input \n                                name=\"email\" \n                                type=\"email\" \n                                required \n                                onChange={this.handleInput}>\n                                </input>\n                            </li>\n                            <li>\n                                <label>Name</label>\n                                <input \n                                name=\"name\"\n                                type=\"text\" \n                                required \n                                onChange={this.handleInput}>\n                                </input>\n                            </li>\n                            <li>\n                                <label>Address</label>\n                                <input \n                                name=\"address\"\n                                type=\"text\" \n                                required \n                                onChange={this.handleInput}>\n                                </input>\n                            </li>\n                            <li>\n                                <button className=\"button primary\" type=\"submit\"> Checkout\n                                </button>\n                            </li>\n                        </ul>\n                    </form>\n                    </div>\n                    </Fade>\n                )}\n                </div>\n             )}\n          </div> \n         </div>\n        );\n    \n    }\n}\n\nexport default connect(\n    (state) => ({\n    order: state.order.order,\n    cartItems: state.cart.cartItems, \n}),\n{ removeFromCart, createOrder, clearOrder }\n)(Cart);\n","import { CLEAR_CART, CLEAR_ORDER, CREATE_ORDER } from \"../types\";\n\n\nexport const createOrder = (order) => (dispatch) => {\n    fetch(\"/api/orders\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(order),\n}) \n.then((res) => res.json())\n.then((data) => {\n    dispatch({type: CREATE_ORDER, payload: data});\n    localStorage.clear(\"cartItems\");\n    dispatch({ type: CLEAR_CART });\n    });\n}; \n\nexport const clearOrder = () => (dispatch) => {\ndispatch({ type: CLEAR_ORDER });\n};  ","import { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { servicesReducer } from \"./reducers/serviceReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { orderReducer } from \"./reducers/orderReducers\";\n\n\nconst initialState = {};\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\ncombineReducers({\n    services: servicesReducer,\n    cart: cartReducer, \n    order: orderReducer, \n}),\ninitialState,\ncomposeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;  ","import { FETCH_SERVICES, FILTER_SERVICES_BY_TYPE, SORT_SERVICES_BY_PRICE } from \"../types\"\n\nexport const servicesReducer = (state = {}, action) => {\n    switch (action.type){\n        case FILTER_SERVICES_BY_TYPE:\n            return {\n                ...state,\n                productType: action.payload.productType,\n                filteredItems: action.payload.items,\n            };\n        case SORT_SERVICES_BY_PRICE:\n            return {\n                ...state,\n                sort: action.payload.sort,\n                filteredItems: action.payload.items,\n                \n            };\n        case FETCH_SERVICES:\n            return {items: action.payload, filteredItems: action.payload};\n            default: \n                return state;\n    }\n}","\n import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\";\n\nexport const cartReducer = (\n  state = { cartItems: JSON.parse(localStorage.getItem(\"cartItems\") || \"[]\") },\n  action\n) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return { cartItems: action.payload.cartItems };\n    case REMOVE_FROM_CART:\n      return { cartItems: action.payload.cartItems };\n    default:\n      return state;\n  }\n};","import { CREATE_ORDER, CLEAR_ORDER } from \"../types\"\n\nconst orderReducer = (state = {} , action) => {\n    switch (action.type) {\n        case CREATE_ORDER:\n            return { order: action.payload };\n        case CLEAR_ORDER:\n            return {order: null}\n         default:\n             return state;                   \n    }\n};\n\nexport { orderReducer };"," import React from \"react\";\nimport Services from \"./Services\";\nimport Filter from \"./Filter\";\nimport Cart from \"./Cart\";\nimport store from \"../store\"\nimport { Provider } from \"react-redux\";\n\n\n\nclass Mainpage extends React.Component {\n// RENDER FUNCTION\n  render() {\n    return ( \n  <Provider store={store}>\n   <div className=\"grid-container\">\n     {/* HEADER */}\n     <header>\n       <a href=\"/\">Mitten MSP </a>\n     </header>\n    {/* MAIN  */}\n     <main>\n       <div className=\"content\">\n         <div className=\"main\"> \n         <Filter></Filter>\n         <Services> </Services> \n         </div>\n         <div className=\"sidebar\"> \n         <Cart/>\n         </div>\n       </div>\n     </main> \n      {/* FOOTER */}\n     <footer>  \n      All Rights Reserved  \n     </footer>\n    </div>\n   </Provider>\n        \n        );\n\n        }\n      }\n\nexport default Mainpage;","import React from \"react\";\nimport Signup from \"./Signup\";\nimport Dashboard from \"./Dashboard\"\nimport Login from \"./Login\"\nimport PrivateRoute from \"./PrivateRoute\"\nimport ForgotPassword from \"./ForgotPassword\"\nimport UpdateProfile from \"./UpdateProfile\"\nimport Mainpage from \"./Mainpage\"\nimport { AuthProvider } from \"../contexts/AuthContext\";\nimport { BrowserRouter as Router, Switch, Route, } from \"react-router-dom\" \n\n\n\n\nfunction App() {\n  return (\n          <Router>\n            <AuthProvider>\n              <Switch>\n                <PrivateRoute exact path=\"/\" component={Dashboard} />\n                <PrivateRoute exact path=\"/update-profile\" component={UpdateProfile} />\n                <PrivateRoute exact path=\"/main-page\" component={Mainpage} />\n                <Route path=\"/signup\" component={Signup} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/forgot-password\" component={ForgotPassword} />\n              </Switch>\n            </AuthProvider>\n          </Router>       \n  );\n}\n\n\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport './index.css';\nimport App from './components/App';\n \n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}